#!/usr/bin/env bash
# mapfile -t zellij_sessions < <(zellij list-sessions)
set -euo pipefail

SESSION_NAME=$1
SHELL_SESSION_LOG="$HOME/.sessions"
# TIMESTAMP="$(date +"%Y%m%dT%H%M%S")"
LOG_NAME="$SHELL_SESSION_LOG/$SESSION_NAME.log"
SCRIPT_NAME="$SHELL_SESSION_LOG/$SESSION_NAME.txt"

usage() {
    cat <<EOF
USAGE:
     $0 [options] [session_name]

OPTIONS:
    -h, --help
        Prints this message

    -r, --restart-session
        Choose a session to restart from
EOF
}

# list entries

logger() {
    script --t="$LOG_NAME" "$SCRIPT_NAME"
}

restart-session() {
    # SELECT_LOG_ENTRY="$(ls .sessions | cut -d'.' -f1 | sort -u | sk)"
    script -a --t="$SESSION_ENTRY.log" "$SESSION_ENTRY.txt"
}

test-session() {
    ZJ_SESSIONS=$(zellij list-sessions)
    NO_SESSIONS=$(echo "${ZJ_SESSIONS}" | wc -l)
    COUNT_SESSION=$(echo "${ZJ_SESSIONS}" | rg -e $SESSION_NAME | wc -l)
    if [[ $NO_SESSIONS -eq 0 ]]; then
        test_session=1
    elif [[ $NO_SESSIONS -ge 1 ]]; then
        if [[ $COUNT_SESSION -eq 0 ]]; then
            test_session=1
        elif [[ $COUNT_SESSION -eq 1 ]]; then
            SESSION_ENTRY="$(echo "${ZJ_SESSIONS}"} | rg -e $SESSION_NAME)"
            test_session=0
        fi
    else
        exit 2
    fi
}

test-log() {
    COUNT_LOG="$(fd -e log $SESSION_NAME $SHELL_SESSION_LOG | sort -u | wc -l)"
    if [[ $COUNT_LOG -eq 0 ]]; then
       test_log=1
    elif [[ $COUNT_LOG -eq 1 ]]; then
        test_log=0
    else
        exit 2
    fi
}


if [[ $# -eq 0 ]]; then
    usage
elif [[ $# -eq 1 ]]; then
    test-session && test-log
    if [[ $test_session -eq 1 && $test_log -eq 1 ]]; then
       logger
    elif [[ $test_session -eq 1 && $test_log -eq 0 ]]; then
        echo "no session but log exist"
    elif [[ $test_session -eq 0 && $test_log -eq 1 ]]; then
        echo "no log but session exist"
    elif [[ $test_session -eq 0 && $test_log -eq 0 ]]; then
        restart-session
    else
        exit 2
    fi
fi
